###########################################################################
#  Author : MANU P ANAND : email:manupanand@outlook.com
############################################################################
# sudo kubeadm reset # uninstall all and reset control plane if error
#"PS1="MASTER->"
#crictl ps #similar to docker ps for containerd
######################################################################################################


# including common task
- name: Including common task 
  ansible.builtin.include_role:  
    name: common 
    tasks_from: common


- name: Setting prompt name
  ansible.builtin.lineinfile:
     path: "/home/ec2-user/.bashrc"
     line: 'export PS1="\[\e[1;31m\]\u\[\e[0m\]@\[\e[1;34m\]{{ role_name }}\[\e[0m\] \w \$ "'
     create: true
     mode: '0644'

- name: Source bashrc
  ansible.builtin.shell: |
      source ~/.bashrc
  args:
   executable:  /bin/bash
   
- name: Enable ports using firewalld
  ansible.builtin.shell: "firewall-cmd --zone=public --add-port={{ item }}/tcp --permanent && firewall-cmd --reload"
  loop: 
    - 22 # ssh 
    - 443 #https
    - 6443 #kubeapiserver

- name: Enable port range - 10247-10260 etcd
  ansible.builtin.shell: "firewall-cmd --zone=public --add-port=10247-10260/tcp --permanent && firewall-cmd --reload" 
- name: Enable port range - 2379-2380 etcd
  ansible.builtin.shell: "firewall-cmd --zone=public --add-port=2379-2380/tcp --permanent && firewall-cmd --reload" 

- name: Enable firewalld
  ansible.builtin.systemd_service:
     name: firewalld
     state: restarted
     enabled: true

- name: Enable Containerd
  ansible.builtin.systemd_service:
     name: containerd
     state: restarted
     enabled: true

- name: Restart kubelet 
  ansible.builtin.systemd_service: 
    name: kubelet 
    state: restarted 
    enabled: true 
    daemon_reload: true 
      
#############################################################
# disable swap |disk partition
# swapoff -a #disable al swap area
# use rhel ot ubuntu
# sudo swapoff -a  # check commands
# # sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
##############################################################


######################### Only for control plane ###############################  
- name: Install K9s 
  ansible.builtin.unarchive: 
   src: https://github.com/derailed/k9s/releases/download/v0.40.10/k9s_Linux_amd64.tar.gz
   dest: "/usr/local/bin/"
   remote_src: true
  
- name: Set correct permissions for K9s binary
  ansible.builtin.file:
    path: /usr/local/bin/k9s
    mode: '0755'
    owner: root
    group: root

- name: Get IP address 
  ansible.builtin.shell:  hostname -I | awk '{print $1}' 
  register: ip_address


- name: Debug 
  ansible.builtin.debug: 
     msg: "{{ ip_address.stdout }}"

- name: Generate master node token 
  ansible.builtin.shell: "kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address={{  ip_address.stdout }} --node-name master"
  register: token 

- name: Copy token to a file 
  ansible.builtin.copy: 
    content: "{{ token.stdout }}"
    dest: "/tmp/token.sh"
    mode: '0660'
  

- name: Set up kubeconfig for ec2-user
  ansible.builtin.shell: |
    rm -rf $HOME/.kube || true
    mkdir -p $HOME/.kube
    cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    chown $(id -u):$(id -g) $HOME/.kube/config
  args:
    executable: /bin/bash
  become: true

- name: Restart kubelet
  anisble.builtin.shell: sudo systemctl restart kubelet
  
- name: generate join token again 
  ansible.builtin.shell:  "kubeadm token create --print-join-command"
  register: join_command

- name: Copy  and get join command 
  ansible.builtin.copy: 
   content: |
      #!/bin/bash
      echo "Executing join command"
      {{ join_command.stdout }} 
   dest: "/tmp/join.sh"
   mode: '0777'


- name: Install Calico 
  ansible.builtin.shell: |
    cd /tmp
    kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.29.3/manifests/tigera-operator.yaml  --validate=false
    
    
- name: Install Calico 
  ansible.builtin.shell: |
    cd /tmp
    curl https://raw.githubusercontent.com/projectcalico/calico/v3.29.3/manifests/custom-resources.yaml -O 
    kubectl create -f custom-resources.yaml --validate=false
    
    
